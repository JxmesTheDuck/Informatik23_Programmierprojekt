#BlueJ class context
comment0.target=SPIEL
comment0.text=\r\n\ Die\ Klasse\ SPIEL\ ist\ ein\ Template,\ das\ so\ wie\ es\ ist\ an\ Schueler\ ausgegeben\ werden\ kann.\r\n\ (Einzige\ Voraussetzung\ ist,\ dass\ die\ engine-alpha-Bibliothek\ im\ Suchpfad\ erreichbar\ ist.)\r\n\ Es\ startet\ alles\ Notwendige\ fuer\ ein\ Spiel.\r\n\ \r\n\ Beim\ Konstruktor\ ohne\ Parameter\ gibt\ es\ keine\ Punkte-Anzeigen\ und\ auch\ keine\ Maus-Interaktion.\r\n\ Die\ Methoden\ tick()\ und\ tasteReagieren()\ werden\ immer\ automatisch\ aufgerufen.\r\n\ \r\n\ Beim\ Konstruktor\ mit\ Parametern\ koennen\ die\ linken\ und\ rechten\ Punkte-Anzeigen\ sowie\ die\ \r\n\ Interaktion\ mit\ der\ Maus\ ein-\ bzw.\ ausgeschaltet\ werden.\r\n\ \r\n\ @author\ Andonie\ \ (nach\ Idee\ von\ Bendikt\ Lindemann\ und\ Mike\ Ganshorn)\r\n\ \r\n
comment1.params=breite\ hoehe\ punkteLinks\ punkteRechts\ maus
comment1.target=SPIEL(int,\ int,\ boolean,\ boolean,\ boolean)
comment1.text=\r\n\ Erstellt\ ein\ Spiel.\ Startet\ die\ Anzeige.\r\n\ \r\n\ @param\ \ \ punkteLinks\ \ \ \ \ ist\ dieser\ Wert\ <code>true</code>,\ so\ sieht\ man\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ links\ eine\ Punkteanzeige.\ Ist\ er\ <code>false</code>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ sieht\ man\ keine.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ @param\ \ \ punkteRechts\ \ \ \ ist\ dieser\ Wert\ <code>true</code>,\ so\ sieht\ man\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ rechts\ eine\ Punkteanzeige.\ Ist\ er\ <code>false</code>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ sieht\ man\ keine.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ @param\ \ \ maus\ \ \ \ \ \ \ \ \ \ \ \ ist\ dieser\ Wert\ <code>true</code>,\ wird\ eine\ Maus\ im\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Spiel\ angezeigt\ und\ verwendet.\ Ist\ er\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>false</code>,\ gibt\ es\ keine\ Maus.\r\n
comment10.params=ms
comment10.target=void\ tickerNeuStarten(int)
comment10.text=\r\n\ Startet\ den\ Ticker\ neu.\r\n\ \r\n\ @param\ \ \ ms\ \ \ \ \ \ Die\ Zeit\ in\ Millisekunden\ zwischen\ zwei\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Aufrufen\ der\ <code>tick()</code>-Methode.\ \r\n
comment11.params=pfad\ hotspotX\ hotspotY
comment11.target=void\ mausIconSetzen(java.lang.String,\ int,\ int)
comment11.text=\r\n\ Setzt\ ein\ neues\ Maus-Icon.\r\n\ \r\n\ @param\ \ \ pfad\ \ \ \ \ \ \ \ Der\ Pfad\ zu\ dem\ Bild\ (jpg,\ bmp,\ png),\ das\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ das\ neue\ Maus-Icon\ werden\ soll.\ ZB\:\ "mausicon.png"\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ @param\ \ \ hotspotX\ \ \ \ Die\ X-Koordinate\ des\ Hotspots\ fuer\ das\ neue\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Maus-Icon.\ (relativ\ im\ Icon)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ @param\ \ \ hotspotY\ \ \ \ Die\ Y-Koordinate\ des\ Hotspots\ fuer\ das\ neue\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Maus-Icon.\ (relativ\ im\ Icon)\r\n
comment12.params=
comment12.target=void\ allePunkteSichtbar()
comment12.text=\r\n\ Sorgt\ dafuer,\ dass\ sowohl\ der\ rechte\ als\ auch\ der\ linke\ Punktestand\ sichtbar\ ist.\r\n
comment13.params=
comment13.target=void\ nurRechtePunkteSichtbar()
comment13.text=\r\n\ Sorgt\ dafuer,\ dass\ nur\ der\ linke\ Punktestand\ sichtbar\ ist.\r\n
comment14.params=
comment14.target=void\ nurLinkePunkteSichtbar()
comment14.text=\r\n\ Sorgt\ dafuer,\ dass\ nur\ der\ rechte\ Punktestand\ sichtbar\ ist.\r\n
comment15.params=
comment15.target=void\ allePunkteUnsichtbar()
comment15.text=\r\n\ Sorgt\ dafuer,\ dass\ weder\ der\ rechte\ noch\ der\ linke\ Punktestand\ sichtbar\ ist.\r\n
comment16.params=pl
comment16.target=void\ punkteLinksSetzen(int)
comment16.text=\r\n\ Setzt\ den\ linken\ Punktestand.\ Aenderungen\ sind\ nur\ sichtbar,\r\n\ wenn\ auch\ der\ linke\ Punktestand\ sichtbar\ ist.\r\n\ \r\n\ @param\ \ \ pl\ \ \ \ \ \ Der\ neue\ linke\ Punktestand.\r\n
comment17.params=pr
comment17.target=void\ punkteRechtsSetzen(int)
comment17.text=\r\n\ Setzt\ den\ rechten\ Punktestand.\ Aenderungen\ sind\ nur\ sichtbar,\r\n\ wenn\ auch\ der\ rechte\ Punktestand\ sichtbar\ ist.\r\n\ \r\n\ @param\ \ \ pr\ \ \ \ \ \ Der\ neue\ rechte\ Punktestand.\r\n
comment18.params=farbe
comment18.target=void\ setzeFarbePunktestand(java.lang.String)
comment18.text=\r\n\ Aendert\ die\ Farbe\ der\ Punktestandsanzeige\r\n\r\n\ @param\ farbe\ \ \ \ \ Die\ neue\ Farbe\ der\ Puntkestandsanzeige\r\n
comment19.params=von\ bis
comment19.target=int\ zufallszahlVonBis(int,\ int)
comment19.text=\r\n\ Gibt\ eine\ Zufallszahl\ aus.\r\n\ \r\n\ @param\ von\ \ \ Die\ Untergrenze\ der\ Zufallszahl\ (INKLUSIVE)\r\n\ \r\n\ @param\ bis\ \ \ Die\ Obergrenze\ der\ Zufallszahl\ (INKLUSIVE)\r\n\ \r\n\ @return\ \ \ \ \ \ Eine\ Zufallszahl\ z\ mit\:\ \ \ von\ <\=\ z\ <\=\ bis\r\n
comment2.params=
comment2.target=SPIEL()
comment2.text=\r\n\ Erstellt\ ein\ einfaches\ Spiel\ ohne\ Anzeige\ und\ Maus.<br\ />\r\n\ Das\ Spiel\ hat\ somit\ Ticker\ und\ Tastatureingaben.\r\n
comment20.params=pfad
comment20.target=void\ hintergrundgrafikSetzen(java.lang.String)
comment20.text=\r\n\ Setzt\ eine\ Hintergrundgrafik\ fuer\ das\ Spiel.\r\n\ \r\n\ @param\ \ \ pfad\ \ \ \ Der\ Pfad\ der\ Bilddatei\ (jpg,\ bmp,\ png)\ des\ Bildes,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ das\ benutzt\ werden\ soll.\ ZB\:\ "hintergrund.jpg"\r\n
comment21.params=ms
comment21.target=void\ warte(int)
comment21.text=\r\n\ Wartet\ um\ die\ Angegebene\ Anzahl\ an\ Millisekunden\ bis\ zur\ Ausfuehrung\ des\ naechsten\ Befehls.\r\n\r\n\ @param\ \ \ ms\ \ Die\ zu\ wartende\ Zeit\ in\ Millisekunden\r\n
comment3.params=
comment3.target=int\ gibAnzeigeBreite()
comment4.params=
comment4.target=int\ gibAnzeigeHoehe()
comment5.params=
comment5.target=void\ tick()
comment5.text=\r\n\ Wird\ regelmaessig\ aufgerufen.\ So\ kommt\ Bewegung\ ins\ Spiel\!\r\n
comment6.params=x\ y
comment6.target=void\ klickReagieren(int,\ int)
comment6.text=\r\n\ Wird\ bei\ jedem\ Mausklick\ (Linksklick)\ automatisch\ aufgerufen.\r\n\ \r\n\ @param\ \ \ x\ \ \ Die\ X-Koordinate\ des\ Klicks\r\n\ \r\n\ @param\ \ \ y\ \ \ Die\ Y-Koordinate\ des\ Klicks\r\n
comment7.params=tastenkuerzel
comment7.target=void\ tasteReagieren(int)
comment7.text=\r\n\ Wird\ bei\ jedem\ Tastendruck\ automatisch\ aufgerufen.\r\n\ \r\n\ @param\ \ \ tastenkuerzel\ \ \ Der\ int-Wert,\ der\ fuer\ die\ gedrueckte\ Taste\ steht.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Details\ koennen\ in\ der\ <i>Tabelle\ aller\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Tastaturkuerzel</i>\ abgelesen\ werden.\r\n
comment8.params=ms
comment8.target=void\ tickerIntervallSetzen(int)
comment8.text=\r\n\ Setzt\ das\ Ticker-Intervall.\r\n\ \r\n\ @param\ \ \ ms\ \ Die\ Zeit\ in\ Millisekunden\ zwischen\ zwei\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Aufrufen\ der\ <code>tick()</code>-Methode.\r\n
comment9.params=
comment9.target=void\ tickerStoppen()
comment9.text=\r\n\ Stoppt\ die\ Ticker-Funktion.\ Die\ <code>tick()</code>-Methode\r\n\ wird\ nicht\ weiter\ aufgerufen.\ Der\ automatische\ Aufruf\ der\ \r\n\ <code>tick()</code>-Methode\ kann\ durch\ die\ Methode\ \r\n\ <code>tickerNeuStarten(int\ ms)</code>\ wiedergestartet\ werden.\r\n\ \r\n\ @see\ \ \ \ \ \#tickerNeuStarten(int)\r\n
numComments=22
