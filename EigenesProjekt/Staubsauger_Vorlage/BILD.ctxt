#BlueJ class context
comment0.target=BILD
comment0.text=\n\ Klasse\ BILD\ zum\ Darstellen\ eines\ GIF,\ JPG,\ PNG\ in\ EDU-Engine\n\ \n\ @author\ \ \ \ \ \ mike\ ganshorn\n\ @version\ \ \ \ \ 2014-04-01\n\ \n\ @changelog\ \ \ Konstruktor\ setzt\ nun\ Bild-Mittelpunkt\ auf\ uebergebenen\ Mittelpunkt\ (nicht\ Ecke\ links\ oben)\n
comment1.params=x\ y\ name
comment1.target=BILD(int,\ int,\ java.lang.String)
comment1.text=\n\ BILD\ Konstruktor\n\n\ @param\ \ \ x\ \ \ \ \ \ \ x-Koordinate\ im\ Fenster\ (Pixel)\n\ @param\ \ \ y\ \ \ \ \ \ \ y-Koordinate\ im\ Fenster\ (Pixel)\n\ @param\ \ \ name\ \ \ \ Name\ der\ Grafik-Datei\ (im\ Projekt-Ordner)\n
comment10.params=neuerDrehwinkel
comment10.target=void\ setzeDrehwinkel(int)
comment10.text=\n\ Setzt\ den\ Drehwinkel\ auf\ eine\ absoluten\ neuen\ Wert\n\n\ @param\ \ \ neuerDrehwinkel\ \ \ \ \ der\ neue\ Drehwinkel\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\:\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\n
comment11.params=
comment11.target=int\ nenneWinkel()
comment11.text=\n\ Nennt\ den\ Winkel,\ um\ den\ die\ Grafik\ gedreht\ wurde\n\n\ @return\ \ \ \ \ \ der\ Winkel,\ um\ den\ die\ Grafik\ gedreht\ wurde\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ 0\:\ wenn\ nicht\ gedreht\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ +\:\ wenn\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ wenn\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\n
comment12.params=
comment12.target=double\ sin_Drehwinkel()
comment12.text=\n\ liefert\ den\ Sinus\ des\ Drehwinkels\ der\ Grafik\n\n\ @return\ \ Sinus\ des\ aktuellen\ Drehwinkels\n
comment13.params=
comment13.target=double\ cos_Drehwinkel()
comment13.text=\n\ liefert\ den\ Cosinus\ des\ Drehwinkels\ der\ Grafik\n\n\ @return\ \ Cosinus\ des\ aktuellen\ Drehwinkels\n
comment2.params=deltaX\ deltaY
comment2.target=void\ verschiebenUm(double,\ double)
comment2.text=\n\ Methode\ verschiebenUm\n\n\ @param\ \ \ deltaX\ \ Pixel\ in\ x-Richtung\ (wird\ bei\ Bedarf\ auf\ ganze\ Pixel\ gerundet)\n\ @param\ \ \ deltaY\ \ Pixel\ in\ y-Richtung\ (wird\ bei\ Bedarf\ auf\ ganze\ Pixel\ gerundet)\n
comment3.params=x\ y
comment3.target=boolean\ beinhaltetPunkt(int,\ int)
comment3.text=\n\ Methode\ beinhaltetPunkt\n\n\ @param\ \ \ x\ \ \ x-Koordinate\ des\ Punkts\ (Pixel)\n\ @param\ \ \ y\ \ \ x-Koordinate\ des\ Punkts\ (Pixel)\n\ @return\ \ \ \ \ \ true,\ wenn\ Punkt\ innerhalb\ der\ Grafik\n
comment4.params=x\ y
comment4.target=void\ setzeMittelpunkt(int,\ int)
comment4.text=\n\ Methode\ setzeMittelpunkt\n\n\ @param\ \ \ x\ \ \ x-Koordinate\ des\ Mittelpunkts\ (Pixel)\n\ @param\ \ \ y\ \ \ y-Koordinate\ des\ Mittelpunkts\ (Pixel)\n
comment5.params=
comment5.target=int\ nenneMx()
comment5.text=\n\ Methode\ nenneMx\n\n\ @return\ \ x-Koordinate\ des\ Mittelpunkts\ (Pixel)\n
comment6.params=
comment6.target=int\ nenneMy()
comment6.text=\n\ Methode\ nenneMY\n\n\ @return\ \ y-Koordinate\ des\ Mittelpunkts\ (Pixel)\n
comment7.params=sichtbarNeu
comment7.target=void\ setzeSichtbar(boolean)
comment7.text=\n\ Methode\ setzeSichtbar\n\n\ @param\ \ \ sichtbarNeu\ \ \ \ \ true,\ wenn\ die\ Grafik\ sichtbar\ sein\ soll\n
comment8.params=
comment8.target=boolean\ nenneSichtbar()
comment8.text=\n\ Methode\ nenneSichtbar\n\n\ @return\ \ true,\ wenn\ die\ Grafik\ gerade\ sichbar\ ist\n
comment9.params=winkelAenderung
comment9.target=void\ drehenUm(int)
comment9.text=\n\ Dreht\ die\ Grafik\ um\ einen\ Winkel\n\n\ @param\ \ \ winkelAenderung\ \ \ \ \ +\:\ mathematisch\ positiver\ Drehsinn\ (gegen\ den\ Uhrzeigersinn)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\:\ mathematisch\ negativer\ Drehsinn\ (im\ Uhrzeigersinn)\n
numComments=14
